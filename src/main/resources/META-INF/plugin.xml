<idea-plugin>
    <id>org.example.number-line-inspector</id>
    <name>Number line inspector</name>
    <vendor url="https://github.com/bwbeach/number-line-inspector">GitHub Project: Number Line Inspector</vendor>

    <description><![CDATA[
    This plugin follows my weird coding style of never using &gt; in
    code, and offers to refactor to convert to &lt;.
    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!--  Extend the IntelliJ Platform local inspection type, and connect it to the implementation class
              in this plugin.
              <localInspection> type element is applied within the scope of a file under edit.
                  It is preferred over <inspectionToolProvider>
                  @see intellij.platform.resources.LangExtensionPoints
                  @see com.intellij.codeInspection.InspectionProfileEntry
              Attributes:
                language= Language ID
                shortName= Not specified, will be computed by the underlying implementation classes.
                displayName= The string to be shown in the Preferences | Editor | Inspections panel
                    The displayName gets registered to identify this inspection.
                    Can be localized using key= and bundle= attributes instead.
                groupPath= Defines the outermost grouping for this inspection in
                    the Preferences | Editor | Inspections panel. Not localized.
                groupBundle= Name of *.bundle file to translate groupKey.
                    In this case reuse an IntelliJ Platform bundle file from intellij.platform.resources.en
                groupKey= Key to use for translation subgroup name using groupBundle file.
                    In this case reuse the IntelliJ Platform subcategory "Probable bugs"
                enabledByDefault= Inspection state when Inspections panel is created.
                level= The default level of error found by this inspection, e.g. INFO, ERROR, etc.
                    @see com.intellij.codeHighlighting.HighlightDisplayLevel
                implementationClass= FQN of inspection implementation
               -->
        <localInspection language="JAVA"
                         displayName="SDK: use LT instead of GT"
                         groupPath="Java"
                         groupBundle="messages.InspectionsBundle"
                         groupKey="group.names.probable.bugs"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="sample.NumberLineInspection"/>

    </extensions>

    <actions>
        <!-- Add your actions here -->
    </actions>
</idea-plugin>